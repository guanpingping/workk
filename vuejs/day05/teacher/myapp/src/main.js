import Vue from 'vue'
import App from './App.vue'
import Observer from "./observer";

Vue.prototype.Observer = Observer;
new Vue({
  el: '#app',
  render: h => h(App)
})


/*
  keep-alive
    keep-alive是vue中的一个内置组件,keep-alive包裹的动态组件/组件 当组件在不活跃状态的时候会将组件缓存在
    缓存当中,而不是进行销毁，下一次进入活跃状态的时候，会从缓存中读取，而不是重新创建


    常用的属性
      1、include  
        类型：字符串或者正则表达式
        作用： 包含需要匹配的组件
      2、exclude
        类型：字符串或者正则表达式
        作用  排除不需要缓存的组件
      3、max
        类型：数字
        作用：最多缓存多少个组件


    面试题
      解释一下什么叫做单向数据流？
        当组件给父组件给子组件传递数据的时候，子组件不能直接修改父组件的值，因为数据是单向流动的


    过滤器：filter
      过滤数据

      组件内部使用过滤器的时候需要在export defualt  中书写key filters

      filters是一个对象  key值是过滤器的名称  val值是过滤器实现的函数 函数中接收到的参数有需要过滤的数据以及
      管道接受到的一些其他参数

      过滤器如何使用  通过管道符进行使用   | 管道符的后面书写过滤器的名称



    slot:插槽

      当组件当做标签进行使用的时候，如果需要在组件标签内部进行书写一些HTML标签的时候，那么需要在组件内部用
      slot插槽进行接受，否则无法进行显示

      slot如果没有name属性的时候会接受所有标签,如果想要将书写的HTML标签放在指定的位置的时候我们需要指定当前HTML的
      slot类名  在组件的内部给slot标签添加name属性 值为HTML中slot的值。这样书写可以使我们的组件更加的灵活

      
    插槽作用域

      带参数的插槽
        好处：
          可以将子组件的数据传递到父组件

      当组件标签内部的HTML标签的数据想要通过组件内部传递过来进行使用的时候，
      首先需要在组件标签内部书写template标签  定义scope属性   
      在组件中通过自定义属性将数据传递到父组件中   通过scope的值进行接受





      slot也是Vue中的内置组件(凡是内置组件都不会被当做标签渲染到页面上的)

      
      slot最大的好处是什么?
        当封装组件的时候可以使组件更加灵活  复用性高


      你在工作当中有没有封装过组件？封装组件需要注意的事项？组件封装的时候需要向外部暴露出什么？



      Vue中动画
        如果在vue需要哪个组件或者标签使用动画的时候必须在当前组件或标签外部加一个标签
        <transition></transition>

        tranisition标签必须加一个name属性 值为动画的类名

        如果需要动画执行那么当前组件或者标签必须是显示隐藏 v-show  创建销毁 v-if 状态   动态组件
        动画会在显示和隐藏之间进行执行
    
*/